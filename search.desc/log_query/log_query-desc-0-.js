searchState.loadedDescShard("log_query", 0, "Represents a column with filters to query.\nMatch the content with a substring.\nControls how many adjacent lines to return.\nOnly match the exact content.\nSpecify the number of lines before and after the matched …\nGreptimeDB’s log query request.\nMatch the content with a postfix. Similar to <code>Prefix</code>.\nMatch the content with a prefix.\nMatch the content with a regex pattern. The pattern should …\nSpecify the number of seconds before and after the matched …\nRepresents a time range for log query.\nCase-sensitive column name to query.\nColumns with filters to query.\nAdjacent lines to return.\nFilters to apply to the column. Can be empty.\nMaximum number of logs to return. If not provided, it will …\nA fully qualified table name to query logs from.\nSpecifies the time range for the log query. See <code>TimeFilter</code> …\nSNAFU context selector for the <code>Error::EndBeforeStart</code> …\nContains the error value\nSNAFU context selector for the <code>Error::InvalidDateFormat</code> …\nSNAFU context selector for the <code>Error::InvalidSpanFormat</code> …\nSNAFU context selector for the <code>Error::InvalidTimeFilter</code> …\nContains the success value\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return the associated error\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nConsume the selector and return a <code>Result</code> with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRepresents a column with filters to query.\nMatch the content with a substring.\nControls how many adjacent lines to return.\nOnly match the exact content.\nSpecify the number of lines before and after the matched …\nGreptimeDB’s log query request.\nMatch the content with a postfix. Similar to <code>Prefix</code>.\nMatch the content with a prefix.\nMatch the content with a regex pattern. The pattern should …\nSpecify the number of seconds before and after the matched …\nRepresents a time range for log query.\nValidate and canonicalize the time filter.\nCase-sensitive column name to query.\nColumns with filters to query.\nAdjacent lines to return.\nFilters to apply to the column. Can be empty.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMaximum number of logs to return. If not provided, it will …\nUtil function returns a start and optional end DateTime\nUtil function handles durations like “1 week”, “1 …\nA fully qualified table name to query logs from.\nSpecifies the time range for the log query. See <code>TimeFilter</code> …")